###TD 4 Hachage
import matplotlib.pyplot as plt






def h_naif(chaine):
    A=0
    for c in chaine:
        A+=ord(c)
    return A

def h(chaine):


class Hashtable:
    def __init__(self,hach,N):
        self.__hach=hach
        self.value=[None for k in range(N)]


    def put(self,key,value):
        index=self.__hach(key)%len(self.value)

        if self.value[index]==None:
            self.value[index]=[(key,value)]
        a=0 #sert uniquement à marquer si le couple à été rajouté ou non
        for k in range( len( self.value[index])):
            if self.value[index][k][0]==key:
                self.value[index][k]=(key,value)
                a=1
        if a==0:
            self.value[index].append((key,value))


    def get(self,key):
        index=self.__hach(key)%len(self.value)
        A= self.value[index]
        if A==None:
            return None
        for k in range(len(A)):
            if A[k][0]==key:
                return A[k][1]
        return None



    def repartition(self):
        N=len(self.value)
        Lval=[0 for k in range(N)]
        for k in range(N):
            if self.value[k]!=None:
                a=len(self.value[k])
                Lval[k]=a
        y=Lval
        x=range(N)
        width=1/1.5
        plt.bar(x,y,width,color='red')
        plt.show()




ht=Hashtable(h_naif,5)
ht.put("abc",2)
ht.put("acb",3)
ht.put("a",5)
ht.put("ab",5)
ht.put("cab",5)
ht.repartition()

liste=[]
f=open("frenchssaccent.dic",'r')
for ligne in f:
    liste.append(ligne[0:len(ligne)-1])
f.close()

L=[]
for mot in liste:
    longueur=len(mot)
    L.append((mot,longueur))


N=320

ht2=Hashtable(h_naif,N)
for elt in L:
    ht2.put(elt[0],elt[1])
ht2.repartition()

#je ne comprends pas la fonction de hachage décrite dans le cours, notament la ligne hash ^= (hash >> 6)


"""
y = [3, 10, 7, 5, 3, 4.5, 6, 8.1]
N = len(y)
x = range(N)
width = 1/1.5
plt.bar(x, y, width, color="blue")
plt.show()

"""






